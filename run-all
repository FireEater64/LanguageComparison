#!/bin/bash
sieveSize=10000000

if [ $# -eq 0 ]
  then
    echo "No arguments supplied, using defaults."
else
  if [ -z "$1" ]
    then
      echo "No argument supplied, using defaults."
  else
    sieveSize=$1
  fi
fi

if [ ! -d "bin" ]; then
  echo "Compiled Sieves have not been compiled, run ./compile-all"
fi

#Change directories to the compiled sieves' location
if [ -d "bin" ]; then
  cd bin

  #Check for existence of cpp version before running
  if hash ./sieve-cpp 2>/dev/null; then
      echo "Running C++ sieve"
      time ./sieve-cpp $sieveSize
      echo ""
  else
      echo "Error: No C++ sieve found..."
  fi

  #Check for existence of dmd version before running
  if hash ./sieve-dlang 2>/dev/null; then
      echo "Running DMD sieve"
      time ./sieve-dlang $sieveSize
      echo " "
  else
      echo "Error: No D sieve found..."
  fi

  #Check for existence of Rust version before running
  if hash ./sieve-rust 2>/dev/null; then
      echo "Running Rust sieve"
      time ./sieve-rust $sieveSize
      echo " "
  else
      echo "Error: No Rust sieve found..."
  fi

  #Check for existence of Java version before running
  if hash ./SieveJava.class 2>/dev/null; then
      echo "Running Java sieve"
      time java SieveJava $sieveSize
      echo " "
  else
      echo "Error: No Java sieve found..."
  fi

  #Check for existence of Scala version before running
  if hash ./SieveScala.class 2>/dev/null; then
      echo "Running Scala sieve"
      time scala SieveScala $sieveSize
      echo " "
  else
      echo "Error: No Scala sieve found..."
  fi

  #We have finished running the compiled sieves, now run the interpreted
  cd ..
fi

#Check for existence of Python and Python sieve version
if hash python3 2>/dev/null; then
    if hash ./sieve-py.py 2>/dev/null; then
        echo "Running Python sieve"
        time python3 sieve-py.py $sieveSize
        echo " "
    else
        echo "Error: No Python sieve found..."
    fi
else
    echo "Error: Python not found..."
fi

#Check for existence of Ruby and Ruby sieve version
if hash ruby 2>/dev/null; then
    if hash ./sieve_ruby.rb 2>/dev/null; then
        echo "Running Ruby sieve"
        time ruby sieve_ruby.rb $sieveSize
        echo " "
    else
        echo "Error: No Ruby sieve found..."
    fi
else
    echo "Error: Ruby not found..."
fi

#Check for existence of Lua and Lua sieve version
if hash lua 2>/dev/null; then
    if hash ./sieve-lua.lua 2>/dev/null; then
        echo "Running Lua sieve"
        time lua sieve-lua.lua $sieveSize
        echo " "
    else
        echo "Error: No Lua sieve found..."
    fi
else
    echo "Error: Lua not found..."
fi

#Check for existence of Perl and Perl sieve version
if hash perl 2>/dev/null; then
    if hash ./sieve-perl.pl 2>/dev/null; then
        echo "Running Perl sieve"
        time perl sieve-perl.pl $sieveSize
        echo " "
    else
        echo "Error: No Perl sieve found..."
    fi
else
    echo "Error: Perl not found..."
fi

echo "Done."
